generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String        @id @default(uuid())
  email                String        @unique
  username             String        @unique
  passwordHash         String        @map("password_hash")
  role                 UserRole      @default(RECEPCION)
  active               Boolean       @default(true)
  lastAccess           DateTime?     @map("last_access")
  failedAttempts       Int           @default(0) @map("failed_attempts")
  lockedUntil          DateTime?     @map("locked_until")
  createdAt            DateTime      @default(now()) @map("created_at")
  updatedAt            DateTime      @updatedAt @map("updated_at")
  licenseNumber        String?       @map("license_number")
  phone                String?       @map("phone")
  specialty            String?       @map("specialty")
  appointmentsAsDoctor Appointment[] @relation("DoctorAppointments")

  @@map("users")
}

model Patient {
  id                String               @id @default(uuid())
  codCliente        Int?                 @unique @map("cod_cliente")
  firstName         String               @map("first_name")
  lastName          String               @map("last_name")
  alias             String?
  documentType      DocumentType         @map("document_type")
  documentNumber    String               @unique @map("document_number")
  birthDate         DateTime?            @map("birth_date")
  gender            Gender?
  profession        String?
  phone             String
  alternativePhone  String?              @map("alternative_phone")
  mobile            String?
  email             String?
  fax               String?
  address           String?
  city              String?
  postalCode        String?              @map("postal_code")
  province          String?
  country           String               @default("Espa√±a")
  bankName          String?              @map("bank_name")
  bankAccount       String?              @map("bank_account")
  wantsSMS          Boolean              @default(false) @map("wants_sms")
  wantsEmail        Boolean              @default(true) @map("wants_email")
  observations      String?
  dataConsent       Boolean              @default(false) @map("data_consent")
  imageConsent      Boolean              @default(false) @map("image_consent")
  marketingConsent  Boolean              @default(false) @map("marketing_consent")
  consentDate       DateTime?            @map("consent_date")
  createdAt         DateTime             @default(now()) @map("created_at")
  updatedAt         DateTime             @updatedAt @map("updated_at")
  acceptsMarketing  Boolean              @default(true) @map("accepts_marketing")
  acceptsWhatsapp   Boolean              @default(true) @map("accepts_whatsapp")
  allergies         String?              @map("allergies")
  deletedAt         DateTime?            @map("deleted_at")
  isActive          Boolean              @default(true) @map("is_active")
  medicalConditions String?              @map("medical_conditions")
  medications       String?              @map("medications")
  occupation        String?              @map("occupation")
  patientCode       String?              @unique @map("patient_code")
  referredBy        String?              @map("referred_by")
  appointments      Appointment[]
  invoices          Invoice[]
  medicalHistories  MedicalHistory[]
  treatments        TreatmentEvolution[]

  @@index([documentNumber])
  @@index([firstName])
  @@index([lastName])
  @@index([codCliente])
  @@index([patientCode])
  @@index([phone])
  @@map("patients")
}

model Staff {
  id                  String               @id @default(uuid())
  medicoCod           Int?                 @unique @map("medico_cod")
  firstName           String               @map("first_name")
  lastName            String               @map("last_name")
  documentType        DocumentType         @map("document_type")
  documentNumber      String               @unique @map("document_number")
  licenseNumber       String?              @map("license_number")
  specialty           String?
  defaultTreatment    String?              @map("default_treatment")
  phone               String
  email               String?
  active              Boolean              @default(true)
  createdAt           DateTime             @default(now()) @map("created_at")
  updatedAt           DateTime             @updatedAt @map("updated_at")
  medicalHistories    MedicalHistory[]
  treatmentEvolutions TreatmentEvolution[]

  @@map("staff")
}

model Room {
  id           String        @id @default(uuid())
  salaCod      Int?          @unique @map("sala_cod")
  name         String        @unique
  capacity     Int           @default(2)
  observations String?
  active       Boolean       @default(true)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  appointments Appointment[]

  @@map("rooms")
}

model Treatment {
  id                  String               @id @default(uuid())
  tratCod             Int?                 @unique @map("trat_cod")
  name                String               @unique
  duration            Int                  @map("duration_minutes")
  defaultDoctor       String?              @map("default_doctor")
  observations        String?
  price               Decimal              @default(0) @db.Decimal(10, 2)
  vatPercentage       Decimal              @default(21) @map("vat_percentage") @db.Decimal(5, 2)
  active              Boolean              @default(true)
  createdAt           DateTime             @default(now()) @map("created_at")
  updatedAt           DateTime             @updatedAt @map("updated_at")
  appointments        Appointment[]
  treatmentEvolutions TreatmentEvolution[]

  @@map("treatments")
}

model Appointment {
  id               String            @id @default(uuid())
  codDiario        Int?              @unique @map("cod_diario")
  patientId        String            @map("patient_id")
  doctorId         String            @map("doctor_id")
  roomId           String            @map("room_id")
  treatmentId      String            @map("treatment_id")
  date             DateTime          @db.Date
  startTime        DateTime          @map("start_time")
  endTime          DateTime          @map("end_time")
  status           AppointmentStatus @default(PROGRAMADA)
  observations     String?
  confirmed        Boolean           @default(false)
  confirmationDate DateTime?         @map("confirmation_date")
  reminderSent     Boolean           @default(false) @map("reminder_sent")
  createdAt        DateTime          @default(now()) @map("created_at")
  updatedAt        DateTime          @updatedAt @map("updated_at")
  doctor           User              @relation("DoctorAppointments", fields: [doctorId], references: [id])
  patient          Patient           @relation(fields: [patientId], references: [id])
  room             Room              @relation(fields: [roomId], references: [id])
  treatment        Treatment         @relation(fields: [treatmentId], references: [id])

  @@index([date])
  @@index([patientId])
  @@index([doctorId])
  @@index([status])
  @@map("appointments")
}

model MedicalHistory {
  id                String   @id @default(uuid())
  contador          Int?     @unique
  patientId         String   @map("patient_id")
  doctorId          String   @map("doctor_id")
  date              DateTime @default(now())
  photography       String?
  consent           String?
  clinicTreatment   String?  @map("clinic_treatment")
  diseases          String?
  allergies         String?
  medications       String?
  smoker            Boolean  @default(false)
  currentTreatment  String?  @map("current_treatment")
  treatmentOK       Boolean? @map("treatment_ok")
  creams            String?
  hematomas         Boolean  @default(false)
  keloid            Boolean  @default(false)
  exploration       String?
  otherObservations String?  @map("other_observations")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  doctor            Staff    @relation(fields: [doctorId], references: [id])
  patient           Patient  @relation(fields: [patientId], references: [id])

  @@index([patientId])
  @@index([date])
  @@map("medical_histories")
}

model TreatmentEvolution {
  id            String        @id @default(uuid())
  patientId     String        @map("patient_id")
  treatmentId   String        @map("treatment_id")
  doctorId      String        @map("doctor_id")
  treatmentType TreatmentType @map("treatment_type")
  date          DateTime
  zone          String?
  dose          String?
  product       String?
  observations  String?
  numInjections Int?          @map("num_injections")
  pulse         Float?
  spot          Float?
  power         Float?
  numShots      Int?          @map("num_shots")
  volume        Float?
  amount        Decimal       @default(0) @db.Decimal(10, 2)
  billable      Boolean       @default(true)
  billed        Boolean       @default(false)
  closed        Boolean       @default(false)
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  doctor        Staff         @relation(fields: [doctorId], references: [id])
  patient       Patient       @relation(fields: [patientId], references: [id])
  treatment     Treatment     @relation(fields: [treatmentId], references: [id])

  @@index([patientId])
  @@index([date])
  @@index([treatmentType])
  @@map("treatment_evolutions")
}

model Invoice {
  id                 String         @id @default(uuid())
  contador           Int?           @unique
  invoiceNumber      Int            @map("invoice_number")
  invoiceYear        Int            @map("invoice_year")
  invoiceSeries      String?        @map("invoice_series")
  patientId          String         @map("patient_id")
  fiscalName         String         @map("fiscal_name")
  fiscalId           String         @map("fiscal_id")
  fiscalAddress      String         @map("fiscal_address")
  fiscalCity         String?        @map("fiscal_city")
  fiscalPostalCode   String?        @map("fiscal_postal_code")
  fiscalProvince     String?        @map("fiscal_province")
  issueDate          DateTime       @map("issue_date")
  dueDate            DateTime?      @map("due_date")
  subtotal           Decimal        @db.Decimal(10, 2)
  commercialDiscount Decimal        @default(0) @map("commercial_discount") @db.Decimal(5, 2)
  totalDiscount      Decimal        @default(0) @map("total_discount") @db.Decimal(10, 2)
  taxableBase        Decimal        @map("taxable_base") @db.Decimal(10, 2)
  totalVat           Decimal        @map("total_vat") @db.Decimal(10, 2)
  totalAmount        Decimal        @map("total_amount") @db.Decimal(10, 2)
  status             InvoiceStatus  @default(BORRADOR)
  paid               Boolean        @default(false)
  paymentDate        DateTime?      @map("payment_date")
  paymentMethod      PaymentMethod? @map("payment_method")
  observations       String?
  createdAt          DateTime       @default(now()) @map("created_at")
  updatedAt          DateTime       @updatedAt @map("updated_at")
  invoiceLines       InvoiceLine[]
  patient            Patient        @relation(fields: [patientId], references: [id])

  @@unique([invoiceNumber, invoiceYear, invoiceSeries])
  @@index([patientId])
  @@index([issueDate])
  @@index([status])
  @@map("invoices")
}

model InvoiceLine {
  id                 String   @id @default(uuid())
  invoiceId          String   @map("invoice_id")
  lineNumber         Int      @map("line_number")
  concept            String
  productName        String?  @map("product_name")
  quantity           Decimal  @default(1) @db.Decimal(10, 2)
  unitPrice          Decimal  @map("unit_price") @db.Decimal(10, 2)
  discountPercentage Decimal  @default(0) @map("discount_percentage") @db.Decimal(5, 2)
  vatPercentage      Decimal  @default(21) @map("vat_percentage") @db.Decimal(5, 2)
  subtotal           Decimal  @db.Decimal(10, 2)
  vatAmount          Decimal  @map("vat_amount") @db.Decimal(10, 2)
  totalAmount        Decimal  @map("total_amount") @db.Decimal(10, 2)
  createdAt          DateTime @default(now()) @map("created_at")
  invoice            Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@map("invoice_lines")
}

model SMSSent {
  id        String   @id @default(uuid())
  patientId String   @map("patient_id")
  date      DateTime
  phone     String
  message   String?
  sentCount Int      @default(1) @map("sent_count")
  sentBy    String?  @map("sent_by")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("sms_sent")
}

model Configuration {
  id          String   @id @default(uuid())
  key         String   @unique
  value       Json
  category    String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("configuration")
}

enum UserRole {
  ADMIN
  MEDICO
  AUXILIAR
  RECEPCION
  CONTABILIDAD
}

enum AppointmentStatus {
  PROGRAMADA
  CONFIRMADA
  EN_CURSO
  COMPLETADA
  CANCELADA
  NO_SHOW
}

enum DocumentType {
  DNI
  NIE
  PASAPORTE
  OTRO
}

enum Gender {
  M
  F
  O
}

enum InvoiceStatus {
  BORRADOR
  EMITIDA
  PAGADA
  ANULADA
  DEVUELTA
}

enum PaymentMethod {
  EFECTIVO
  TARJETA
  TRANSFERENCIA
  BIZUM
  OTRO
}

enum TreatmentType {
  BOTOX
  LASER
  PEELING
  INFILTRACION
  FLEBOLOGIA
  DIETA
  OTRO
}
